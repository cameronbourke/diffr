angular.module("diffr",["ngAnimate","ui.router","diffr.controllers","diffr.filters","diffr.config","diffr.directives","diffr.services","infinite-scroll"]),function(){"use strict";function e(e,t){e.state("search",{url:"/search",templateUrl:"templates/search.html",controller:"SearchCtrl",controllerAs:"search"}).state("compare",{url:"/compare",templateUrl:"templates/compare.html",controller:"CompareCtrl",controllerAs:"compare"}),t.otherwise("/search")}angular.module("diffr.config",[]),angular.module("diffr.config").config(e),e.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function e(e,t){}angular.module("diffr.controllers",[]),angular.module("diffr.controllers").controller("AppCtrl",e),e.$inject=["$scope","$rootScope"]}(),function(){"use strict";function e(e,t,r,o,i){function c(){s.comparedPhotosList=r.isArrayDefined("comparedUrls")?a:[]}function n(e){var t=a.indexOf(e);a.splice(t,1),s.comparedPhotosList=a,r.setObject("comparedUrls",a)}var s=this,a=r.getObject("comparedUrls");s.removeComparedPhoto=n,c()}angular.module("diffr.controllers").controller("CompareCtrl",e),e.$inject=["$scope","$rootScope","LocalStorageService","FlickrService","StorageService"]}(),function(){"use strict";function e(e,t,r,o,i){function c(e,t){g||(h.searchedPhotos=e),h.searchedText=e,g=!1,h.searchedPhotosList=[],o.getSearchedPhotos(e,t).then(function(t){h.searchedPhotosList=t,-1===h.recentSearches.indexOf(e)&&h.recentSearches.push(e)})}function n(e,t){o.getSearchedPhotos(e,t).then(function(e){e.forEach(function(e){h.searchedPhotosList.push(e)})})}function s(e){c(e,20),h.showRecentsDropdown=!1}function a(){h.showRecentsDropdown=!h.showRecentsDropdown}function l(e){var t="https://farm"+e.farm+".staticflickr.com/"+e.server+"/"+e.id+"_"+e.secret+"_b.jpg";-1===p.indexOf(t)?(p.push(t),r.setObject("comparedUrls",p)):console.log("already in comparison list")}function f(){p=r.isArrayDefined("comparedUrls")?r.getObject("comparedUrls"):[]}function u(e){var t="https://farm"+e.farm+".staticflickr.com/"+e.server+"/"+e.id+"_"+e.secret+"_b.jpg";return-1===p.indexOf(t)?!0:!1}function d(){return r.isArrayDefined("comparedUrls")?!0:!1}var h=this;h.modelOptions={updateOn:"default blur",debounce:{"default":1e3,blur:0}},h.recentSearches=[],h.showRecentsDropdown=!1,h.searchedText="selfie";var p,g=!0;h.getSearchedPhotos=c,h.updatePhotos=s,h.toggleRecents=a,h.loadMorePhotos=n,h.addPhotoToCompare=l,h.showCompareButton=u,h.hasComparedPhotos=d,c("selfie",20),f()}angular.module("diffr.controllers").controller("SearchCtrl",e),e.$inject=["$scope","$rootScope","LocalStorageService","FlickrService","StorageService"]}(),function(){"use strict";function e(){return{restrict:"E",template:['<svg class="icon-add-photos" width="100%" height="100%" viewBox="-1 -1 31 25" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">',"<title>Two photos stacked with an add icon in the corner</title>","<desc>Lets the user add a new photo to their list of compared images</desc>","<g class='svg-compare-icons'>","<g stroke-width='1'>","<path d='M0.118149935,4.50963844 L11.8374394,0.802704286 L18.1785857,17.7202619 L6.45929629,21.427196 L0.118149935,4.50963844 L0.118149935,4.50963844 Z'></path>","<path d='M18.0003708,0.243357633 L28.6245848,6.10760511 L18.5931005,21.44435 L7.96888653,15.5801025 L18.0003708,0.243357633 L18.0003708,0.243357633 Z'></path>","</g>","<g>",'<ellipse cx="5.54186573" cy="5.15083056" rx="5.54186573" ry="5.15083056"></ellipse>','<path d="M5.18820719,4.80797342 L5.18820719,2.40797342 L5.89552426,2.40797342 L5.89552426,4.80797342 L8.37113402,4.80797342 L8.37113402,5.49368771 L5.89552426,5.49368771',"L5.89552426,7.89368771",'L5.18820719,7.89368771 L5.18820719,5.49368771 L2.71259744,5.49368771 L2.71259744,4.80797342 L5.18820719,4.80797342 Z"></path>',"</g>","</g>","</svg>"].join("")}}angular.module("diffr.directives",[]),angular.module("diffr.directives").directive("iconAddCompare",e)}(),function(){"use strict";function e(){return function(e){return console.log(e),"undefined"!=typeof e?e.substring(0,1).toUpperCase()+e.substring(1):void 0}}angular.module("diffr.filters",[]),angular.module("diffr.filters").filter("capitalize",e)}(),function(){"use strict";function e(e,t){function r(r,i){var c=t.defer();return e.get("https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key="+o+"&tags="+r+"&per_page="+i+"&format=json&nojsoncallback=1").success(function(e){c.resolve(e.photos.photo)}).error(function(e,t){console.log(e),c.reject(e)}),c.promise}var o="52ebcfc572066983269bf5140708086d";this.getSearchedPhotos=r}angular.module("diffr.services",[]),angular.module("diffr.services").service("FlickrService",e),e.$inject=["$http","$q"]}(),function(){"use strict";function e(e){function t(t,r){e.localStorage[t]=r}function r(t,r){return e.localStorage[t]||r}function o(t,r){e.localStorage[t]=JSON.stringify(r)}function i(t){return JSON.parse(e.localStorage[t]||"{}")}function c(t){var r=JSON.parse(e.localStorage[t]||"{}");return"undefined"!=typeof r[0]?!0:!1}this.set=t,this.get=r,this.setObject=o,this.getObject=i,this.isArrayDefined=c}angular.module("diffr.services").service("LocalStorageService",e),e.$inject=["$window"]}(),function(){"use strict";function e(){function e(e,t){s.objects[e]=t}function t(e){return s.objects[e]}function r(e,t){s.arrays[e]=t}function o(e){return s.arrays[e]}function i(e,t){s.strings[e]=t}function c(e){return s.strings[e]}function n(){return s}var s={};s.objects={},s.arrays={},s.strings={},this.setObject=e,this.getObject=t,this.setArray=r,this.getArray=o,this.setString=i,this.getString=c,this.getAllStorage=n}angular.module("diffr.services").service("StorageService",e),e.$inject=[]}();
//# sourceMappingURL=data:application/json;base64,